{
  "name": "Chainlit ADK WYSIWYG Dev Container",
  "dockerComposeFile": "docker-compose.yml",
  "service": "dev",
  "workspaceFolder": "/workspace",

  // Configure tool-specific properties
  "customizations": {
    "vscode": {
      // VS Code extensions to install in the container
      "extensions": [
        // TypeScript/JavaScript
        "dbaeumer.vscode-eslint",
        "esbenp.prettier-vscode",
        "ms-vscode.vscode-typescript-next",

        // Python
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-python.black-formatter",

        // React
        "dsznajder.es7-react-js-snippets",

        // General development
        "eamodio.gitlens",
        "github.vscode-pull-request-github",
        "visualstudioexptteam.vscodeintellicode",

        // Docker/Container tools
        "ms-azuretools.vscode-docker",

        // Utilities
        "streetsidesoftware.code-spell-checker",
        "yzhang.markdown-all-in-one"
      ],

      // VS Code settings
      "settings": {
        "typescript.tsdk": "node_modules/typescript/lib",
        "typescript.enablePromptUseWorkspaceTsdk": true,
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.codeActionsOnSave": {
          "source.fixAll.eslint": "explicit"
        },
        "eslint.validate": [
          "javascript",
          "javascriptreact",
          "typescript",
          "typescriptreact"
        ],
        "python.defaultInterpreterPath": "/workspace/chainlit_app/.venv/bin/python",
        "python.formatting.provider": "black",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": false,
        "python.linting.flake8Enabled": true,
        "[python]": {
          "editor.defaultFormatter": "ms-python.black-formatter",
          "editor.formatOnSave": true
        },
        "[typescript]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        "[typescriptreact]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        "[json]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        "files.watcherExclude": {
          "**/node_modules/**": true,
          "**/.venv/**": true,
          "**/dist/**": true
        }
      }
    }
  },

  // Forward ports to host machine
  "forwardPorts": [3000, 3001, 8000],

  // Port labels for clarity
  "portsAttributes": {
    "3000": {
      "label": "Frontend (Vite)",
      "onAutoForward": "notify"
    },
    "3001": {
      "label": "Backend API",
      "onAutoForward": "notify"
    },
    "8000": {
      "label": "Chainlit Server",
      "onAutoForward": "notify"
    }
  },

  // Run commands after container is created (one-time setup)
  "postCreateCommand": "npm install && echo 'âœ… Dev container ready! Run: npm run dev:all'",

  // Run commands after container starts (every time)
  "postStartCommand": "git config --global --add safe.directory /workspace",

  // Features to add to the dev container
  "features": {
    "ghcr.io/devcontainers/features/git:1": {
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/github-cli:1": {
      "version": "latest"
    }
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally
  "remoteUser": "node",

  // Uncomment to connect as root instead
  // "remoteUser": "root",

  // Mount the host's Docker socket (for Docker-in-Docker scenarios)
  "mounts": [
    // Persist bash history
    "source=chainlit-bashhistory,target=/commandhistory,type=volume",

    // Persist extensions (faster subsequent starts)
    "source=chainlit-vscode-extensions,target=/home/node/.vscode-server/extensions,type=volume"
  ],

  // Set environment variables
  "remoteEnv": {
    "NODE_ENV": "development",
    "CHOKIDAR_USEPOLLING": "true"
  }
}
