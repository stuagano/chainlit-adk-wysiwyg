#!/bin/sh
# Chainlit ADK WYSIWYG - Container Start Script
# Starts both the backend API server and Chainlit server in the container

set -e

echo "Starting Chainlit ADK WYSIWYG Container..."

# Check if required environment variables are set
if [ -z "$GEMINI_API_KEY" ]; then
    echo "WARNING: GEMINI_API_KEY is not set. The application may not function properly."
fi

# Create chainlit_app directory if it doesn't exist
mkdir -p /app/chainlit_app

# Create default main.py if it doesn't exist
if [ ! -f /app/chainlit_app/main.py ]; then
    echo "Creating default Chainlit main.py..."
    cat > /app/chainlit_app/main.py << 'EOF'
import chainlit as cl

@cl.on_chat_start
async def start():
    await cl.Message(
        content="Welcome to Chainlit ADK WYSIWYG! Please use the UI at port 3001 to configure your agents and sync them to this Chainlit instance."
    ).send()

@cl.on_message
async def main(message: cl.Message):
    await cl.Message(
        content=f"Echo: {message.content}\n\nPlease configure agents using the UI builder and sync to enable full functionality."
    ).send()
EOF
fi

# Create default tools.py if it doesn't exist
if [ ! -f /app/chainlit_app/tools.py ]; then
    echo "Creating default tools.py..."
    echo "# Tools will be generated by the UI builder" > /app/chainlit_app/tools.py
fi

# Function to start the backend server
start_backend() {
    echo "Starting Backend API Server on port ${BACKEND_PORT:-3001}..."
    node /app/dist/server/index.js
}

# Function to start the Chainlit server
start_chainlit() {
    echo "Starting Chainlit Server on port ${CHAINLIT_PORT:-8000}..."
    cd /app/chainlit_app
    /app/chainlit_app/.venv/bin/chainlit run main.py --host 0.0.0.0 --port "${CHAINLIT_PORT:-8000}"
}

# Trap SIGTERM and SIGINT for graceful shutdown
trap 'kill 0' SIGTERM SIGINT

# Start both services in the background
start_backend &
BACKEND_PID=$!

start_chainlit &
CHAINLIT_PID=$!

echo "Services started:"
echo "  - Backend API: PID $BACKEND_PID (port ${BACKEND_PORT:-3001})"
echo "  - Chainlit: PID $CHAINLIT_PID (port ${CHAINLIT_PORT:-8000})"
echo "Container is ready!"

# Wait for both processes
wait $BACKEND_PID $CHAINLIT_PID
